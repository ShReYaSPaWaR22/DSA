#include<iostream>
#include<vector>
using namespace std;
class Solution{
    public :
    vector<int> result(vector<vector<int>> &matrix, int row, int col, int target){
        int start = 0, end = row*col-1;
        while(start<=end){
            int mid = (start+end)/2;
            int row_index = mid/col;  //FIND ROW INDEX WITH THE HELP OF INDEX/COLUMN FORMULA 
            int col_index = mid%col; //FIND COLUMN INDEX WITH THE HELP OF INDEX MODULO COLUMN FORMULA
            if(matrix[row_index][col_index]==target){
                return{row_index,col_index};
            }
            else if(matrix[row_index][col_index]<target){
                start = mid+1;
            }
            else{
                end = mid-1;
            }
        }
        return{-1,-1};
    }
    
     
};
int main(){
    Solution sol;
    int row, col;
    cout<<"Enter the dimensions of the matrix : ";
    cin >> row >> col;
    
    vector<vector<int>> matrix(row,vector<int>(col));
    
    cout<<"Enter the elements in the matrix : ";
    for(int i=0;i<row;i++){
        for(int j=0;j<col;j++){
            cin>>matrix[i][j];
        }
    }
    
    int target;
    cout<<"Enter the target element you want to search in the matrix : ";
    cin >> target;
    
    vector<int> answer = sol.result(matrix,row,col,target);
    
    if(answer[0]==-1){
        cout<<"The Element is not present in the matrix"<<endl;
    }
    else{
        cout<<"The Element is present at the index : "<<"["<<answer[0]<<"]"<<"["<<answer[1]<<"]"<<endl;
    }
    
}
